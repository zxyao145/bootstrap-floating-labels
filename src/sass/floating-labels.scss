$white: #fff !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-600: #6c757d !default;
$gray-900: #212529 !default;

$prefix: bs- !default;

$input-padding-x: .75rem !default;
$input-border-width: 1px;
$input-height-border: calc(#{$input-border-width} * 2) !default; // stylelint-disable-line function-disallowed-list

$enable-transitions: true !default;
$enable-reduced-motion: true !default;
$enable-rounded: true !default;

$border-radius: .375rem !default;
$body-secondary-bg: $gray-200 !default;

:root {
  --#{$prefix}body-bg: #{$white};
  --#{$prefix}body-color: #{$gray-900};
  --#{$prefix}secondary-bg: #{$body-secondary-bg};
  --#{$prefix}body-color-rgb: 33, 37, 41;
  --#{$prefix}border-width: #{$input-border-width};
  --#{$prefix}border-color: #{$gray-300};
  --#{$prefix}border-radius: #{$border-radius};

}

$input-bg: var(--#{$prefix}body-bg) !default;
$input-border-radius: var(--#{$prefix}border-radius) !default;
$input-disabled-bg: var(--#{$prefix}secondary-bg) !default;

// scss-docs-start border-radius-mixins
@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
  @if $enable-rounded {
    border-radius: valid-radius($radius);
  }

  @else if $fallback-border-radius !=false {
    border-radius: $fallback-border-radius;
  }
}

@mixin transition($transition...) {
  @if length($transition)==0 {
    $transition: $transition-base;
  }

  @if length($transition)>1 {
    @each $value in $transition {
      @if $value==null or $value==none {
        @warn "The keyword 'none' or 'null' must be used as a single argument.";
      }
    }
  }

  @if $enable-transitions {
    @if nth($transition, 1) !=null {
      transition: $transition;
    }

    @if $enable-reduced-motion and nth($transition, 1) !=null and nth($transition, 1) !=none {
      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }
    }
  }
}

// Return valid calc
@function add($value1, $value2, $return-calc: true) {
  @if $value1==null {
    @return $value2;
  }

  @if $value2==null {
    @return $value1;
  }

  @if type-of($value1)==number and type-of($value2)==number and comparable($value1, $value2) {
    @return $value1+$value2;
  }

  @return if($return-calc==true, calc(#{$value1} + #{$value2}), $value1 + unquote(" + ") + $value2);
}

// scss-docs-start form-floating-variables
$form-floating-height: add(3.5rem, $input-height-border) !default;
$form-floating-line-height: 1.25 !default;
$form-floating-padding-x: $input-padding-x !default;
$form-floating-padding-y: 1rem !default;
$form-floating-input-padding-t: 1.625rem !default;
$form-floating-input-padding-b: .625rem !default;
$form-floating-label-height: 1.5em !default;
$form-floating-label-opacity: .65 !default;
$form-floating-label-transform: scale(.85) translateY(-.5rem) translateX(.15rem) !default;
$form-floating-label-disabled-color: $gray-600 !default;
$form-floating-transition: opacity .1s ease-in-out,
transform .1s ease-in-out !default;
// scss-docs-end form-floating-variables


.form-floating {
  position: relative;

  &,
  & * {
    box-sizing: border-box;
  }

  .form-control {
    display: block;
    width: 100%;
    font-size: 1rem;
    font-weight: 400;
    color: var(--bs-body-color);
    background-color: var(--bs-body-bg);
    background-clip: padding-box;
    border: var(--bs-border-width) solid var(--bs-border-color);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-radius: var(--bs-border-radius);
    transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
  }

  .form-control:focus {
    color: var(--bs-body-color);
    background-color: var(--bs-body-bg);
    border-color: #86b7fe;
    box-shadow: 0 0 0 2px rgba(13, 110, 253, .25);
    border-inline-end-width: 1px;
    outline: 0;
  }

  >.form-control,
  >.form-control-plaintext {
    height: $form-floating-height;
    line-height: $form-floating-line-height;
  }

  >label {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    height: 100%; // allow textareas
    padding: $form-floating-padding-y $form-floating-padding-x;
    overflow: hidden;
    text-align: start;
    text-overflow: ellipsis;
    white-space: nowrap;
    pointer-events: none;
    border: $input-border-width solid transparent; // Required for aligning label's text with the input as it affects inner box model
    transform-origin: 0 0;
    @include transition($form-floating-transition);
  }

  >.form-control,
  >.form-control-plaintext {
    padding: $form-floating-padding-y $form-floating-padding-x;

    &::placeholder {
      color: transparent;
    }

    &:focus,
    &:not(:placeholder-shown) {
      padding-top: $form-floating-input-padding-t;
      padding-bottom: $form-floating-input-padding-b;
    }

    // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
    &:-webkit-autofill {
      padding-top: $form-floating-input-padding-t;
      padding-bottom: $form-floating-input-padding-b;
    }
  }

  >.form-control:focus,
  >.form-control:not(:placeholder-shown),
  >.form-control-plaintext {
    ~label {
      color: rgba(var(--#{$prefix}body-color-rgb), #{$form-floating-label-opacity});
      transform: $form-floating-label-transform;

      &::after {
        position: absolute;
        inset: $form-floating-padding-y ($form-floating-padding-x * .5);
        z-index: -1;
        height: $form-floating-label-height;
        content: "";
        background-color: $input-bg;
        @include border-radius($input-border-radius);
      }
    }
  }

  // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
  >.form-control:-webkit-autofill {
    ~label {
      color: rgba(var(--#{$prefix}body-color-rgb), #{$form-floating-label-opacity});
      transform: $form-floating-label-transform;
    }
  }

  >.form-control-plaintext {
    ~label {
      border-width: $input-border-width 0; // Required to properly position label text - as explained above
    }
  }

  > :disabled~label {
    color: $form-floating-label-disabled-color;

    &::after {
      background-color: $input-disabled-bg;
    }
  }
}